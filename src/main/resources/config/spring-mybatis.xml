<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


    <!-- 自动将Service层注入-->
    <context:component-scan base-package="com.aac.service,com.aac.aspect" />
    <!-- jdbc配置 -->
    <context:property-placeholder location="classpath:jdbc/jdbc.properties" />

    <!--统一的dataSource-->
    <bean id="dynamicDataSource" class="com.aac.utils.DynamicDataSource" >
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!--通过不同的key决定用哪个dataSource-->
                <entry value-ref="dataSource" key="dataSource"></entry>
                <entry value-ref="slaveDataSource" key="slaveDataSource"></entry>
            </map>
        </property>
        <!--设置默认的dataSource-->
        <property name="defaultTargetDataSource" ref="dataSource">
        </property>
    </bean>

    <!-- dbcp数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!--这里如果写成${jdbc.driver}，就会出现加载jdbc驱动失败的问题，暂时不清楚什么原因-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <property name="maxActive" value="20" />
        <property name="maxIdle" value="10"/>
        <property name="maxWait" value="10000" />
        <property name="defaultAutoCommit" value="false"/>
    </bean>

    <!-- dbcp数据源 -->
    <bean id="slaveDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <!--这里如果写成${jdbc.driver}，就会出现加载jdbc驱动失败的问题，暂时不清楚什么原因-->
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="${slave.jdbc.url}" />
    <property name="username" value="${slave.jdbc.username}" />
    <property name="password" value="${slave.jdbc.password}" />

    <property name="maxActive" value="20" />
    <property name="maxIdle" value="10"/>
    <property name="maxWait" value="10000" />
    <property name="defaultAutoCommit" value="false"/>
</bean>

<!-- mybatis的配置文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/*/*.xml"/>
    </bean>

    <!-- mybatis的配置文件  从库-->
    <!--<bean id="slaveSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="slaveDataSource"/>
        <property name="mapperLocations" value="classpath*:com/enjoyphoto/dao/*/*.xml"/>
    </bean>-->

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.aac.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- 事务 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="search*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>

            <tx:method name="*" propagation="REQUIRED" />
            <tx:method name="*" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--Spring默认不支持@Aspect风格的切面声明，通过如下配置开启@Aspect支持-->
    <!--<aop:aspectj-autoproxy/>-->

    <!--<bean id="dataSourceAspect" class="com.aac.utils.DataSourceAspect" />-->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.aac.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>

        <!-- 配置数据源的动态切换 -->
        <!--<aop:aspect ref="dataSourceAspect" order="1">
            <aop:before method="before" pointcut-ref="txPointcut"/>
            &lt;!&ndash;<aop:after-returning method="doAfterReturning" pointcut-ref="serviceAop"/>&ndash;&gt;
        </aop:aspect>-->
    </aop:config>





</beans>